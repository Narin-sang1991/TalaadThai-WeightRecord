<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration, Version=1.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
  </configSections>
    <system.serviceModel>
        <bindings>
            <netTcpBinding>
                <binding name="tcp" closeTimeout="00:01:00" openTimeout="00:01:00"
                    receiveTimeout="00:10:00" sendTimeout="00:01:00" transactionFlow="false"
                    transferMode="Buffered" transactionProtocol="OleTransactions"
                    hostNameComparisonMode="StrongWildcard" listenBacklog="10"
                    maxBufferPoolSize="524288" maxBufferSize="65536" maxConnections="10"
                    maxReceivedMessageSize="65536">
                    <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                        maxBytesPerRead="4096" maxNameTableCharCount="16384" />
                    <reliableSession ordered="true" inactivityTimeout="00:10:00"
                        enabled="false" />
                    <security mode="Transport">
                        <transport clientCredentialType="Windows" protectionLevel="EncryptAndSign" />
                        <message clientCredentialType="Windows" />
                    </security>
                </binding>
            </netTcpBinding>
        </bindings>
        <client>
          <endpoint address="http://localhost:8000" binding="basicHttpBinding"
                    contract="UnityWcfExtensionsTestClient.Service.IUnityService" name="basicHttp" />
            <endpoint address="net.tcp://localhost:8001" binding="netTcpBinding"
                bindingConfiguration="tcp" contract="UnityWcfExtensionsTestClient.Service.IUnityService"
                name="tcp" />
        </client>
      <extensions>
        <behaviorExtensions>
          <add name="unity" type="UnityWcfExtensions.UnityBehaviorExtensionElement, UnityWcfExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
        </behaviorExtensions>
      </extensions>
      <services>
        <service behaviorConfiguration="UnityServiceBehavior"
         name="UnityWcfExtensionsTestClient.Service.UnityService">
          <host>
            <baseAddresses>
              <add baseAddress="http://localhost:8000"/>
              <add baseAddress="net.tcp://localhost:8001"/>
            </baseAddresses>
          </host>
          <endpoint address="" binding="basicHttpBinding" name="basicHttp" contract="UnityWcfExtensionsTestClient.Service.IUnityService" />
          <endpoint address="" binding="netTcpBinding" name="tcp" contract="UnityWcfExtensionsTestClient.Service.IUnityService" />
        </service>
      </services>
      <behaviors>
        <serviceBehaviors>
          <behavior name="UnityServiceBehavior">
            <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
            <serviceMetadata httpGetEnabled="true"/>
            <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
            <serviceDebug includeExceptionDetailInFaults="true"/>
            <unity operationContextEnabled="true" instanceContextEnabled="true" contextChannelEnabled="true" serviceHostBaseEnabled="true"/>
          </behavior>
        </serviceBehaviors>
      </behaviors>
    </system.serviceModel>
  <unity>
    <typeAliases>
      <typeAlias alias="PerThread"
             type="Microsoft.Practices.Unity.PerThreadLifetimeManager, Microsoft.Practices.Unity"/>
      <typeAlias alias="PerOperationContext"
             type="UnityWcfExtensions.UnityOperationContextLifetimeManager, UnityWcfExtensions"/>
      <typeAlias alias="PerInstanceContext"
             type="UnityWcfExtensions.UnityInstanceContextLifetimeManager, UnityWcfExtensions"/>
      <typeAlias alias="PerContextChannel"
                 type="UnityWcfExtensions.UnityContextChannelLifetimeManager, UnityWcfExtensions"/>
      <typeAlias alias="PerServiceHostBase"
                 type="UnityWcfExtensions.UnityServiceHostBaseLifetimeManager, UnityWcfExtensions"/>
    </typeAliases>
    <containers>
      <container>
        <types>
          <type type="UnityWcfExtensionsTestClient.Service.IOperationContextService, UnityWcfExtensionsTestClient" mapTo="UnityWcfExtensionsTestClient.Service.OperationContextService, UnityWcfExtensionsTestClient">
            <!--<lifetime type="PerThread" />-->
            <lifetime type="PerOperationContext" />
          </type>
          <type type="UnityWcfExtensionsTestClient.Service.IInstanceContextService, UnityWcfExtensionsTestClient" mapTo="UnityWcfExtensionsTestClient.Service.InstanceContextService, UnityWcfExtensionsTestClient">
            <!--<lifetime type="PerThread" />-->
            <lifetime type="PerInstanceContext" />
          </type>
          <type type="UnityWcfExtensionsTestClient.Service.IContextChannelService, UnityWcfExtensionsTestClient" mapTo="UnityWcfExtensionsTestClient.Service.ContextChannelService, UnityWcfExtensionsTestClient">
            <!--<lifetime type="PerThread" />-->
            <lifetime type="PerContextChannel" />
          </type>
          <type type="UnityWcfExtensionsTestClient.Service.IServiceHostBaseService, UnityWcfExtensionsTestClient" mapTo="UnityWcfExtensionsTestClient.Service.ServiceHostBaseService, UnityWcfExtensionsTestClient">
            <!--<lifetime type="PerThread" />-->
            <lifetime type="PerServiceHostBase" />
          </type>
        </types>
      </container>
    </containers>
  </unity>
</configuration>